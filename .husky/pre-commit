#!/usr/bin/env bash
# Make script stop on first error
set -e

echo "üîç Running pre-commit checks..."

# Store the root directory
ROOT_DIR=$(pwd)

# Activate virtual environment based on platform
activate_venv() {
  # Common venv directory names
  for venv_dir in ".venv" "venv" "env"; do
    if [ -d "$ROOT_DIR/$venv_dir" ]; then
      echo "üì¶ Activating virtual environment: $venv_dir"
      
      # Windows (Git Bash or similar)
      if [ -f "$ROOT_DIR/$venv_dir/Scripts/activate" ]; then
        source "$ROOT_DIR/$venv_dir/Scripts/activate"
        return 0
      # Linux/Mac
      elif [ -f "$ROOT_DIR/$venv_dir/bin/activate" ]; then
        source "$ROOT_DIR/$venv_dir/bin/activate"
        return 0
      fi
    fi
  done
  echo "‚ö†Ô∏è No virtual environment found. Using system Python."
  return 1
}

# Try to activate the virtual environment
activate_venv

# Backend checks
echo "‚öôÔ∏è Running backend checks..."
cd "$ROOT_DIR/backend" || exit 1

echo "Running isort..."
python -m isort . || { echo "‚ùå isort failed"; exit 1; }

echo "Running black..."
python -m black . || { echo "‚ùå black failed"; exit 1; }

echo "Running flake8..."
python -m flake8 . || { echo "‚ùå flake8 failed"; exit 1; }

echo "Running mccabe..."
python -m flake8 . --select=C901 || { echo "‚ùå mccabe failed"; exit 1; }

echo "Running mypy..."
python -m mypy . || { echo "‚ùå mypy failed"; exit 1; }

# Return to root directory
cd "$ROOT_DIR"

# Frontend checks
echo "‚öôÔ∏è Running frontend checks..."
cd "$ROOT_DIR/frontend" || exit 1

echo "Running eslint..."
npx eslint . || { echo "‚ùå eslint failed"; exit 1; }

echo "Running prettier..."
npx prettier --check . || { echo "‚ùå prettier failed"; exit 1; }

echo "Running typescript..."
npx tsc --noEmit || { echo "‚ùå typescript failed"; exit 1; }

# Return to root directory
cd "$ROOT_DIR"

echo "‚úÖ All checks passed!"
